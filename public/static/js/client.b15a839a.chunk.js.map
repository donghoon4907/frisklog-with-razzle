{"version":3,"sources":["webpack:///./src/components/ProfileBtn.jsx","webpack:///./src/components/SearchBtn.jsx","webpack:///./src/components/HeaderSearchBar.jsx","webpack:///./src/components/CreatePostBtn.jsx","webpack:///./src/graphql/query/notice.js","webpack:///./src/components/HeaderNotice.jsx","webpack:///./src/components/Header.jsx","webpack:///./src/components/RecommandUserItem.jsx","webpack:///./src/components/RecommandUserList.jsx","webpack:///./src/graphql/query/category.js","webpack:///./src/components/RecommandCategoryItem.jsx","webpack:///./src/components/RecommandCategoryList.jsx","webpack:///./src/components/Nav.jsx","webpack:///./src/assets/icon.jsx","webpack:///./src/components/Query.jsx","webpack:///./src/assets/img/modify.svg","webpack:///./src/components/Form.jsx","webpack:///./src/assets/img/logout.svg","webpack:///./src/App.jsx","webpack:///./src/components/Loader.jsx","webpack:///./src/context/reducer.js","webpack:///./src/context/index.jsx","webpack:///./src/components/BtnLink.jsx","webpack:///./src/components/Avatar.jsx","webpack:///./src/lib/state.js","webpack:///./src/assets/img/speaker.svg","webpack:///./src/components/modal/SignUpPresenter.jsx","webpack:///./src/assets/img/trash.svg","webpack:///./src/graphql/query/user.js","webpack:///./src/lib/apollo.js","webpack:///./src/components/modal/SignInPresenter.jsx","webpack:///./src/components/modal/SignInContainer.jsx","webpack:///./src/components/modal/Auth.jsx","webpack:///./src/components/Button.jsx","webpack:///./src/context/action.js","webpack:///./src/components/modal/SignUpContainer.jsx","webpack:///./src/components/Input.jsx","webpack:///./src/theme/index.js","webpack:///./src/theme/globalStyle.js","webpack:///./src/client.js","webpack:///./src/hooks/index.js","webpack:///./src/assets/img/heart_empty.svg","webpack:///./src/graphql/mutation/notice.js","webpack:///./src/components/modal/SetNoticePresenter.jsx","webpack:///./src/components/modal/SetNoticeContainer.jsx","webpack:///./src/assets/img/eye.svg","webpack:///./src/assets/img/comment.svg","webpack:///./src/graphql/mutation/user.js","webpack:///./src/assets/img/heart_full.svg"],"names":["ProfileBtn","dispatch","useDispatch","useSelector","id","avatar","handleClick","useCallback","getStorage","TOKEN_KEY","window","confirm","deleteStorage","type","SET_ME","nickname","email","isMaster","SHOW_LOGIN_MODAL","className","Avatar","src","url","size","userId","onClick","aria-haspopup","SearchBtn","isShowSearchBar","HIDE_SEARCH_BAR","SHOW_SEARCH_BAR","title","aria-pressed","SearchForm","styled","form","props","theme","media","tablet","Wrapper","div","SearchInput","Input","bgColor","HeaderSearchBar","history","useHistory","useState","searchKeyword","setSearchKeyword","$search","useRef","handleChangeSearchKeyword","e","target","value","handleSearchSubmit","preventDefault","alert","push","useEffect","current","focus","onSubmit","htmlFor","val","placeholder","name","onChange","autoComplete","ref","Container","button","CreatePostBtn","GET_NOTICES","gql","Contianer","phone","HeaderNotice","description","SHOW_NOTICE_MODAL","action","actionText","Query","query","variables","first","orderBy","data","notices","map","notice","key","role","tabIndex","header","boxBorder","headerShadow","blueColor","Column","Logo","img","SearchWrapper","Header","to","alt","AvatarWrapper","Title","h6","SubTitle","RecommandUserItem","postCount","isCollapseNav","show","setShow","$avatar","handleEnterAvatar","handleLeaveAvatar","onMouseEnter","onMouseLeave","Overlay","placement","arrowProps","popper","style","backgroundColor","padding","borderRadius","zIndex","left","boxShadow","memo","RecommandUserList","GET_USERS","users","user","GET_CATEGORIES","BtnWrapper","RecommandCategoryItem","content","$btn","handleEnterBtn","handleLeaveBtn","BtnLink","substring","RecommandCategoryList","categories","category","nav","collapse","desktop","Top","Nav","handleClickCollapse","setStorage","COLLAPSE_KEY","CONTRACT_NAVIGATION","EXPAND_NAVIGATION","aria-expanded","aria-controls","Thumbnail","xmlns","viewBox","width","height","d","HeartEmpty","require","HeartFull","Comment","More","Add","Profile","Search","Collapse","version","x","y","View","Notice","Logout","CommonQuery","children","loading","error","fetchMore","client","module","exports","Box","whiteBox","InputWrapper","Label","label","StateChanger","TextArea","textarea","Select","select","FormInput","FormTextArea","Feed","loadable","SearchPostPage","SearchCategoryPage","Post","CreatePostPage","UpdatePostPage","User","NoMatch","Section","section","Main","main","App","isShowLoginModal","isShowNoticeModal","useQuery","ME","ssr","onCompleted","me","handleResize","innerWidth","SET_IS_MOBILE","payload","addEventListener","removeEventListener","exact","path","component","Loader","color","visible","reducer","state","activeNotice","isShowFilterBar","searchPostOption","filter","isMobile","Context","createContext","DispatchContext","initialState","isShowAddPostModal","activePost","feedPostOption","undefined","ContextProvider","useReducer","Provider","useContext","Error","Link","process","browser","Cookies","get","JSON","parse","isSet","set","stringify","expires","isDelete","remove","UploadWrapper","SignUpPresenter","uploadLoading","signUpLoading","preview","$file","onChangeFile","onClickFile","hidden","accept","required","GET_USER","apolloClient","createApolloClient","httpLink","createHttpLink","uri","errorLink","onError","graphQLErrors","networkError","message","console","log","authLink","setContext","_","headers","token","Authorization","ApolloClient","connectToDevTools","ssrMode","link","ApolloLink","from","cache","InMemoryCache","restore","__APOLLO_STATE__","initializeApollo","_apolloClient","existingCache","extract","global","fetch","SignInPresenter","Form","Button","SignInContainer","useMutation","SIGN_IN","login","useInput","handleSubmit","a","logIn","HIDE_LOGIN_MODAL","span","Auth","setAction","handleClose","Modal","onHide","animation","closeButton","Body","HIDE_NOTICE_MODAL","SignUpContainer","useLazyAxios","call","setPreview","file","setFile","SIGN_UP","signUp","handleChangeFile","files","formData","FormData","append","method","env","BACKEND_API_PATH","reader","FileReader","onloadend","result","readAsDataURL","handleClickFile","node","click","createUser","input","forwardRef","customMediaQuery","maxWidth","custom","blackColor","darkGrayColor","lightGrayColor","successColor","infoColor","redColor","darkBlueColor","headerActiveColor","GlobalStyle","createGlobalStyle","normalize","loadableReady","hydrate","document","getElementById","defaultValue","where","setValue","replace","setLoading","options","axios","CREATE_NOTICE","UPDATE_NOTICE","DELETE_NOTICE","ReadOnlyDescription","PreviewWrap","SetNoticePresenter","setNoticeLoading","removeNoticeLoading","mdDescription","onShowEdit","onPreview","onClosePreview","onClose","onDelete","code","modalTitle","dangerouslySetInnerHTML","__html","aria-hidden","Footer","variant","SetNoticeContainer","modalDescription","setMdDescription","modalAction","setModalAction","handlePreView","marked","handleClosePreview","handleShowEdit","handleDelete","noticeId","deleteNotice","location","reload","addNotice","updateNotice"],"mappings":"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","file":"static/js/client.b15a839a.chunk.js","sourcesContent":["import React, { useCallback } from \"react\";\nimport { Profile, Logout } from \"../assets/icon\";\nimport { useDispatch, useSelector } from \"../context\";\nimport { SHOW_LOGIN_MODAL, SET_ME } from \"../context/action\";\nimport { TOKEN_KEY, getStorage, deleteStorage } from \"../lib/state\";\nimport Avatar from \"./Avatar\";\n\n/**\n * 내 정보 아이콘 컴포넌트\n *\n * @Component\n * @author frisk\n */\nconst ProfileBtn = () => {\n    /**\n     * 로컬 상태 변경 모듈 활성화\n     */\n    const dispatch = useDispatch();\n    /**\n     * 로컬 상태 감시 모듈 활성화\n     */\n    const { id, avatar } = useSelector();\n    /**\n     * 클릭 핸들러\n     */\n    const handleClick = useCallback(() => {\n        /**\n         * 토큰 가져오기\n         */\n        const token = getStorage(TOKEN_KEY);\n        if (token) {\n            const tf = window.confirm(\"로그아웃 하시겠어요?\");\n            if (tf) {\n                /**\n                 * 토큰 삭제\n                 */\n                deleteStorage(TOKEN_KEY);\n                /**\n                 * 로컬 상태 갱신\n                 */\n                dispatch({\n                    type: SET_ME,\n                    id: null,\n                    nickname: null,\n                    email: null,\n                    avatar: null,\n                    isMaster: false\n                });\n            }\n        } else {\n            /**\n             * 로그인 모달 보이기\n             */\n            dispatch({\n                type: SHOW_LOGIN_MODAL\n            });\n        }\n    }, []);\n\n    return (\n        <div>\n            {id ? (\n                <div className=\"d-flex justify-content-start\">\n                    <Avatar src={avatar.url} size=\"30\" userId={id} />\n                    <button\n                        type=\"button\"\n                        onClick={handleClick}\n                        className=\"ml-2\"\n                    >\n                        <Logout />\n                        <span className=\"a11y-hidden\">로그아웃 하기</span>\n                    </button>\n                </div>\n            ) : (\n                <button\n                    type=\"button\"\n                    onClick={handleClick}\n                    aria-haspopup=\"true\"\n                >\n                    <Profile />\n                    <span className=\"a11y-hidden\">로그인 하기</span>\n                </button>\n            )}\n        </div>\n    );\n};\n\nexport default ProfileBtn;\n","import React, { useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"../context\";\nimport { SHOW_SEARCH_BAR, HIDE_SEARCH_BAR } from \"../context/action\";\nimport { Search } from \"../assets/icon\";\n\n/**\n * * 검색 아이콘 컴포넌트\n *\n * @Component\n * @author frisk\n */\nconst SearchBtn = () => {\n    /**\n     * 로컬 상태 변경 모듈 활성화\n     */\n    const dispatch = useDispatch();\n    /**\n     * 로컬 상태 감시 모듈 활성화\n     */\n    const { isShowSearchBar } = useSelector();\n    /**\n     * 클릭 핸들러\n     */\n    const handleClick = useCallback(() => {\n        /**\n         * 검색바 보이기 / 숨기기\n         */\n        dispatch({\n            type: isShowSearchBar ? HIDE_SEARCH_BAR : SHOW_SEARCH_BAR\n        });\n    }, [isShowSearchBar]);\n\n    return (\n        <button\n            onClick={handleClick}\n            type=\"button\"\n            title=\"검색\"\n            aria-pressed={isShowSearchBar}\n        >\n            <Search />\n            <span className=\"a11y-hidden\">\n                {isShowSearchBar ? \"검색바 닫기\" : \"검색바 열기\"}\n            </span>\n        </button>\n    );\n};\n\nexport default SearchBtn;\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"../context\";\nimport { HIDE_SEARCH_BAR } from \"../context/action\";\nimport Input from \"./Input\";\nimport { Label } from \"./Form\";\n\nconst SearchForm = styled.form`\n    position: relative;\n    margin: 0 auto;\n    width: 500px;\n\n    ${(props) => props.theme.media.tablet} {\n        width: calc(100% - 2rem);\n    }\n`;\n\nconst Wrapper = styled.div`\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n`;\n\nconst SearchInput = styled(Input)`\n    background: ${(props) => props.theme.bgColor};\n    padding: 5px;\n    font-size: 14px;\n    border-radius: 3px;\n    text-align: center;\n    position: relative;\n\n    &::placeholder {\n        opacity: 0.8;\n        font-weight: 200;\n    }\n`;\n\n/**\n * * 검색 바 컴포넌트\n *\n * @Component\n * @author frisk\n */\nconst HeaderSearchBar = () => {\n    /**\n     * history 객체 활성화\n     */\n    const history = useHistory();\n    /**\n     * 로컬 상태 변경 모듈 활성화\n     */\n    const dispatch = useDispatch();\n    /**\n     * 검색어 상태 관리 모듈 활성화\n     */\n    const [searchKeyword, setSearchKeyword] = useState(\"\");\n    /**\n     * search input element\n     */\n    const $search = useRef(null);\n    /**\n     * 검색어 변경 핸들러\n     */\n    const handleChangeSearchKeyword = useCallback((e) => {\n        setSearchKeyword(e.target.value);\n    }, []);\n    /**\n     * 검색 요청 핸들러\n     */\n    const handleSearchSubmit = useCallback(\n        (e) => {\n            e.preventDefault();\n            /**\n             * 검색어 입력을 안한 경우\n             */\n            if (!searchKeyword) {\n                return alert(\"검색어를 입력하세요\");\n            }\n            /**\n             * 페이지 이동\n             */\n            history.push(`/search/${searchKeyword}`);\n            /**\n             * 검색바 숨기기\n             */\n            dispatch({\n                type: HIDE_SEARCH_BAR\n            });\n        },\n        [searchKeyword]\n    );\n    /**\n     * 라이프 사이클 모듈 활성화\n     */\n    useEffect(() => {\n        /**\n         * 검색창 포커싱\n         */\n        $search.current.focus();\n    }, []);\n\n    return (\n        <SearchForm onSubmit={handleSearchSubmit}>\n            <Label htmlFor=\"search\" val={searchKeyword}>\n                검색어를 입력하세요.\n            </Label>\n            <Wrapper>\n                <SearchInput\n                    placeholder=\"검색어를 입력하세요.\"\n                    name=\"search\"\n                    value={searchKeyword}\n                    onChange={handleChangeSearchKeyword}\n                    autoComplete=\"off\"\n                    ref={$search}\n                />\n            </Wrapper>\n        </SearchForm>\n    );\n};\n\nexport default HeaderSearchBar;\n","import React, { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Add } from \"../assets/icon\";\nimport { useDispatch } from \"../context\";\nimport { SHOW_LOGIN_MODAL } from \"../context/action\";\nimport { TOKEN_KEY, getStorage } from \"../lib/state\";\n\nconst Container = styled.button`\n    ${(props) => props.theme.media.tablet} {\n        display: none;\n    }\n`;\n\n/**\n * 헤더 게시물 추가 컴포넌트\n *\n * @Component\n * @author frisk\n */\nconst CreatePostBtn = () => {\n    /**\n     * history 객체 활성화\n     */\n    const history = useHistory();\n    /**\n     * 로컬 상태 변경 모듈 활성화\n     */\n    const dispatch = useDispatch();\n    /**\n     * 클릭 핸들러\n     */\n    const handleClick = useCallback(() => {\n        /**\n         * 토큰 로드\n         */\n        const token = getStorage(TOKEN_KEY);\n\n        if (token) {\n            /**\n             * 게시물 작성 페이지로 이동\n             */\n            history.push(\"/create_post\");\n        } else {\n            /**\n             * 로그인 팝업 보이기\n             */\n            dispatch({\n                type: SHOW_LOGIN_MODAL\n            });\n        }\n    }, []);\n\n    return (\n        <Container\n            type=\"button\"\n            aria-haspopup=\"true\"\n            onClick={handleClick}\n            title=\"포스트 등록\"\n        >\n            <Add />\n        </Container>\n    );\n};\n\nexport default CreatePostBtn;\n","import { gql } from \"@apollo/client\";\n\n/**\n * * 공지사항 검색\n *\n * @query\n * @author frisk\n * @param $skip 건너뛸 목록의 수\n * @param $first 요청 목록의 수\n * @param $orderBy 정렬\n */\nexport const GET_NOTICES = gql`\n    query GetNotices($skip: Int, $first: Int, $orderBy: String) {\n        notices(skip: $skip, first: $first, orderBy: $orderBy) {\n            id\n            title\n            description\n            createdAt\n            updatedAt\n        }\n    }\n`;\n","import React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"../context\";\nimport { SHOW_NOTICE_MODAL } from \"../context/action\";\nimport { GET_NOTICES } from \"../graphql/query/notice\";\nimport { Notice } from \"../assets/icon\";\nimport Query from \"./Query\";\n\nconst Contianer = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    margin-left: 10px !important;\n\n    & u {\n        margin-left: 5px;\n        cursor: pointer;\n    }\n\n    ${(props) => props.theme.media.phone} {\n        display: none;\n    }\n`;\n\n/**\n * 공지사항 컴포넌트\n *\n * @Component\n * @author frisk\n */\nconst HeaderNotice = () => {\n    /**\n     * 로컬 상태 변경 모듈 활성화\n     */\n    const dispatch = useDispatch();\n    /**\n     * 클릭 핸들러\n     */\n    const handleClick = useCallback(({ title, description, id }) => {\n        dispatch({\n            type: SHOW_NOTICE_MODAL,\n            action: \"readonly\",\n            id,\n            actionText: \"\",\n            title,\n            description\n        });\n    }, []);\n\n    return (\n        <Contianer>\n            <Query\n                query={GET_NOTICES}\n                variables={{\n                    first: 1,\n                    orderBy: \"createdAt_DESC\"\n                }}\n            >\n                {({ data: { notices } }) =>\n                    notices.map((notice) => (\n                        <div key={notice.id}>\n                            <Notice />\n                            <u\n                                onClick={() => handleClick(notice)}\n                                aria-haspopup=\"true\"\n                                role=\"link\"\n                                tabIndex=\"0\"\n                            >\n                                {notice.title}\n                            </u>\n                        </div>\n                    ))\n                }\n            </Query>\n        </Contianer>\n    );\n};\n\nexport default HeaderNotice;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"../context\";\nimport ProfileBtn from \"./ProfileBtn\";\nimport SearchBtn from \"./SearchBtn\";\nimport HeaderSearchBar from \"./HeaderSearchBar\";\nimport CreatePostBtn from \"./CreatePostBtn\";\nimport HeaderNotice from \"./HeaderNotice\";\n\nconst Container = styled.header`\n    height: 3rem;\n    background: white;\n    border-bottom: ${(props) => props.theme.boxBorder};\n    box-shadow: ${(props) => props.theme.headerShadow};\n    flex-shrink: 0;\n    z-index: 1000;\n\n    svg {\n        fill: ${(props) => props.theme.blueColor};\n    }\n`;\n\nconst Wrapper = styled.div`\n    height: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin: 0 auto;\n    padding: 0 10px;\n    position: relative;\n`;\n\nconst Column = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n\n    & > * {\n        margin-left: 10px;\n    }\n`;\n\nconst Logo = styled.img`\n    width: 30px;\n    height: 30px;\n`;\n\nconst SearchWrapper = styled.div`\n    border: none;\n    background: white;\n    position: absolute;\n    top: calc(3rem - 3px);\n    left: 0;\n    width: 100%;\n    height: auto;\n    padding: 10px;\n    box-shadow: ${(props) => props.theme.headerShadow};\n`;\n\n/**\n * * 공통 헤더 컴포넌트\n *\n * @Component\n * @author frisk\n */\nconst Header = () => {\n    /**\n     * 로컬 상태 감시 모듈 활성화\n     */\n    const { isShowSearchBar } = useSelector();\n\n    return (\n        <Container>\n            <Wrapper>\n                <Column>\n                    <Link to=\"/\" role=\"button\">\n                        <Logo\n                            src=\"https://frisk.s3.ap-northeast-2.amazonaws.com/upload/4424b841-b125-4b9a-bcdf-a507ef751bed\"\n                            alt=\"logo\"\n                        />\n                    </Link>\n                    <HeaderNotice />\n                </Column>\n                <Column>\n                    <SearchBtn />\n                    <CreatePostBtn />\n                    <ProfileBtn />\n                </Column>\n            </Wrapper>\n            {isShowSearchBar && (\n                <SearchWrapper>\n                    <HeaderSearchBar />\n                </SearchWrapper>\n            )}\n        </Container>\n    );\n};\n\nexport default Header;\n","import React, { useState, useRef, useCallback, memo } from \"react\";\nimport styled from \"styled-components\";\nimport { Overlay } from \"react-bootstrap\";\nimport { useSelector } from \"../context\";\nimport Avatar from \"./Avatar\";\n\nconst Container = styled.div`\n    height: 50px;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    position: relative;\n    gap: 5px;\n`;\n\nconst AvatarWrapper = styled.div`\n    width: 50px;\n`;\n\nconst Title = styled.h6`\n    width: 150px;\n    font-weight: 500;\n    font-size: 20px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    margin-bottom: 0;\n`;\n\nconst SubTitle = styled.div`\n    font-size: 13px;\n`;\n\n/**\n * * 추천 사용자 컴포넌트\n *\n * @Component\n * @author frisk\n * @param props.id        사용자 ID\n * @param props.avatar    사용자 프로필 사진\n * @param props.nickname  사용자 별칭\n * @param props.postCount 사용자 포스트 수\n *\n */\nconst RecommandUserItem = ({ id, avatar, nickname, postCount }) => {\n    /**\n     * 로컬 상태 감시 모듈 활성화\n     */\n    const { isCollapseNav } = useSelector();\n    /**\n     * 튤팁 보이기 상태 모듈 활성화\n     */\n    const [show, setShow] = useState(false);\n    /**\n     * avatar element\n     */\n    const $avatar = useRef(null);\n    /**\n     * 프로필 사진 mouse enter 핸들러\n     */\n    const handleEnterAvatar = useCallback(() => {\n        if (isCollapseNav === \"contract\") {\n            setShow(true);\n        }\n    }, [isCollapseNav]);\n    /**\n     * 프로필 사진 mouse leave 핸들러\n     */\n    const handleLeaveAvatar = useCallback(() => {\n        if (isCollapseNav === \"contract\") {\n            setShow(false);\n        }\n    }, [isCollapseNav]);\n\n    return (\n        <Container>\n            <AvatarWrapper\n                ref={$avatar}\n                onMouseEnter={handleEnterAvatar}\n                onMouseLeave={handleLeaveAvatar}\n            >\n                <Avatar size=\"45\" src={avatar.url} userId={id} />\n            </AvatarWrapper>\n            {isCollapseNav === \"expand\" && (\n                <div>\n                    <Title>{nickname}</Title>\n                    <SubTitle>{postCount} posts</SubTitle>\n                </div>\n            )}\n            <Overlay target={$avatar.current} show={show} placement=\"right\">\n                {({ placement, arrowProps, show: _show, popper, ...props }) => (\n                    <div\n                        {...props}\n                        style={{\n                            ...props.style,\n                            backgroundColor: \"white\",\n                            padding: \"2px 10px\",\n                            borderRadius: 3,\n                            zIndex: 3,\n                            left: 12,\n                            boxShadow:\n                                \"0 1px 2px rgba(0, 0, 0, 0.15), 0 0 2px rgba(0, 0, 0, 0.1)\"\n                        }}\n                    >\n                        <div>\n                            <Title>{nickname}</Title>\n                            <SubTitle>{postCount} posts</SubTitle>\n                        </div>\n                    </div>\n                )}\n            </Overlay>\n        </Container>\n    );\n};\n\nexport default memo(RecommandUserItem);\n","import React, { memo } from \"react\";\nimport RecommandUserItem from \"./RecommandUserItem\";\nimport { GET_USERS } from \"../graphql/query/user\";\nimport Query from \"./Query\";\n\n/**\n * 추천 사용자 목록 컴포넌트\n *\n * @Component\n * @author frisk\n */\nconst RecommandUserList = () => (\n    <div>\n        <Query\n            query={GET_USERS}\n            variables={{\n                first: 5,\n                orderBy: \"postCount_DESC\"\n            }}\n        >\n            {({ data: { users } }) =>\n                users.map((user) => (\n                    <RecommandUserItem key={user.id} {...user} />\n                ))\n            }\n        </Query>\n    </div>\n);\n\nexport default memo(RecommandUserList);\n","import { gql } from \"@apollo/client\";\n\n/**\n * * 카테고리 검색\n *\n * @query\n * @author frisk\n * @param $skip 건너뛸 목록의 수\n * @param $first 요청 목록의 수\n * @param $orderBy 정렬\n */\nexport const GET_CATEGORIES = gql`\n    query GetCategories($skip: Int, $first: Int, $orderBy: String) {\n        categories(skip: $skip, first: $first, orderBy: $orderBy) {\n            id\n            content\n            useCount\n        }\n    }\n`;\n","import React, { useState, useRef, useCallback, memo } from \"react\";\nimport styled from \"styled-components\";\nimport { Overlay } from \"react-bootstrap\";\nimport { useSelector } from \"../context\";\nimport BtnLink from \"./BtnLink\";\n\nconst Title = styled.h6`\n    width: 150px;\n    font-weight: 500;\n    height: 40px;\n    font-size: 20px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    margin-bottom: 0;\n    display: flex;\n    align-items: center;\n`;\n\nconst BtnWrapper = styled.div`\n    width: 100%;\n    height: 40px;\n    position: relative;\n    margin-bottom: 10px;\n    overflow: hidden;\n`;\n/**\n * * 추천 카테고리 랜더링 컴포넌트\n *\n * @Component\n * @author frisk\n * @param props.content 카테고리명\n *\n */\nconst RecommandCategoryItem = ({ content }) => {\n    /**\n     * 로컬 상태 감시 모듈 활성화\n     */\n    const { isCollapseNav } = useSelector();\n    /**\n     * 튤팁 보이기 상태 모듈 활성화\n     */\n    const [show, setShow] = useState(false);\n    /**\n     * btn element\n     */\n    const $btn = useRef(null);\n    /**\n     * btn mouse enter 핸들러\n     */\n    const handleEnterBtn = useCallback(() => {\n        if (isCollapseNav === \"contract\") {\n            setShow(true);\n        }\n    }, [isCollapseNav]);\n    /**\n     * btn mouse leave 핸들러\n     */\n    const handleLeaveBtn = useCallback(() => {\n        if (isCollapseNav === \"contract\") {\n            setShow(false);\n        }\n    }, [isCollapseNav]);\n\n    return (\n        <BtnWrapper\n            ref={$btn}\n            onMouseEnter={handleEnterBtn}\n            onMouseLeave={handleLeaveBtn}\n        >\n            <BtnLink to={`/category/${content}`}>\n                {isCollapseNav === \"contract\"\n                    ? content.substring(0, 1)\n                    : content}\n            </BtnLink>\n            <Overlay target={$btn.current} show={show} placement=\"right\">\n                {({ placement, arrowProps, show: _show, popper, ...props }) => (\n                    <div\n                        {...props}\n                        style={{\n                            ...props.style,\n                            backgroundColor: \"white\",\n                            padding: \"2px 10px\",\n                            borderRadius: 3,\n                            zIndex: 3,\n                            left: 12,\n                            boxShadow:\n                                \"0 1px 2px rgba(0, 0, 0, 0.15), 0 0 2px rgba(0, 0, 0, 0.1)\"\n                        }}\n                    >\n                        <div>\n                            <Title>{content}</Title>\n                        </div>\n                    </div>\n                )}\n            </Overlay>\n        </BtnWrapper>\n    );\n};\n\nexport default memo(RecommandCategoryItem);\n","import React, { memo } from \"react\";\nimport { GET_CATEGORIES } from \"../graphql/query/category\";\nimport Query from \"./Query\";\nimport RecommandCategoryItem from \"./RecommandCategoryItem\";\n\n/**\n * 추천 카테고리 목록 컴포넌트\n *\n * @Component\n * @author frisk\n */\nconst RecommandCategoryList = () => (\n    <div>\n        <Query\n            query={GET_CATEGORIES}\n            variables={{\n                first: 3,\n                orderBy: \"useCount_DESC\"\n            }}\n        >\n            {({ data: { categories } }) =>\n                categories.map((category) => (\n                    <RecommandCategoryItem key={category.id} {...category} />\n                ))\n            }\n        </Query>\n    </div>\n);\n\nexport default memo(RecommandCategoryList);\n","import React, { useCallback, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"../context\";\nimport { EXPAND_NAVIGATION, CONTRACT_NAVIGATION } from \"../context/action\";\nimport { COLLAPSE_KEY, getStorage, setStorage } from \"../lib/state\";\nimport { Collapse } from \"../assets/icon\";\nimport RecommandUserList from \"./RecommandUserList\";\nimport RecommandCategoryList from \"./RecommandCategoryList\";\n\nconst Container = styled.nav`\n    background: #efeff1;\n    width: ${(props) => (props.collapse === \"expand\" ? 230 : 60)}px;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    padding: 8px;\n    z-index: 10;\n    flex-shrink: 0;\n\n    ${(props) => props.theme.media.desktop} {\n        display: none;\n    }\n\n    & svg {\n        transform: rotate(\n            ${(props) => (props.collapse === \"expand\" ? 0 : 180)}deg\n        );\n    }\n\n    & h6 {\n        margin-top: 10px;\n        display: ${(props) => (props.collapse === \"expand\" ? \"block\" : \"none\")};\n    }\n\n    & hr {\n        display: ${(props) => (props.collapse === \"expand\" ? \"none\" : \"block\")};\n    }\n`;\n\nconst Top = styled.div`\n    display: flex;\n    justify-content: ${(props) =>\n        props.collapse === \"expand\" ? \"space-between\" : \"center\"};\n    align-items: center;\n\n    & svg {\n        fill: ${(props) => props.theme.blueColor};\n    }\n`;\n\n/**\n * 공통 네비게이션 컴포넌트\n *\n * @Component\n * @author frisk\n */\nconst Nav = () => {\n    /**\n     * 로컬 상태 변경 모듈 활성화\n     */\n    const dispatch = useDispatch();\n    /**\n     * 로컬 상태 감시 모듈 활성화\n     */\n    const { isCollapseNav } = useSelector();\n    /**\n     * 확장 아이콘 클릭 이벤트\n     */\n    const handleClickCollapse = useCallback(() => {\n        if (isCollapseNav === \"expand\") {\n            setStorage(COLLAPSE_KEY, \"contract\");\n            dispatch({\n                type: CONTRACT_NAVIGATION\n            });\n        } else {\n            setStorage(COLLAPSE_KEY, \"expand\");\n            dispatch({\n                type: EXPAND_NAVIGATION\n            });\n        }\n    }, [isCollapseNav]);\n    /**\n     * 라이프 사이클 모듈 활성화\n     */\n    useEffect(() => {\n        const isCollapse = getStorage(COLLAPSE_KEY);\n        /**\n         * 로컬 상태 업데이트\n         */\n        if (isCollapse === \"contract\") {\n            dispatch({\n                type: CONTRACT_NAVIGATION\n            });\n        }\n    }, []);\n\n    return (\n        <Container collapse={isCollapseNav} id=\"nav\">\n            <Top collapse={isCollapseNav}>\n                <h6>추천 블로그</h6>\n                <button\n                    type=\"button\"\n                    aria-pressed={isCollapseNav === \"expand\"}\n                    aria-expanded={isCollapseNav === \"expand\"}\n                    aria-controls=\"nav\"\n                    onClick={handleClickCollapse}\n                >\n                    <Collapse />\n                    <span className=\"a11y-hidden\">\n                        {isCollapseNav === \"expand\"\n                            ? \"네비게이션 축소\"\n                            : \"네비게이션 확장\"}\n                    </span>\n                </button>\n            </Top>\n            <RecommandUserList />\n            <hr />\n            <h6>추천 카테고리</h6>\n            <RecommandCategoryList />\n        </Container>\n    );\n};\n\nexport default Nav;\n","import React from \"react\";\n\n/**\n * * Default svg size\n */\nconst size = 24;\n\n/**\n * Thumbnail icon component\n *\n * @Svg\n * @param props.style Svg style\n */\nexport const Thumbnail = ({ style }) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={style}\n        viewBox=\"0 0 24 24\"\n        width={size}\n        height={size}\n    >\n        <path d=\"M19.5 12c-2.483 0-4.5 2.015-4.5 4.5s2.017 4.5 4.5 4.5 4.5-2.015 4.5-4.5-2.017-4.5-4.5-4.5zm2.5 5h-2v2h-1v-2h-2v-1h2v-2h1v2h2v1zm-18 0l4-5.96 2.48 1.96 2.52-4 1.853 2.964c-1.271 1.303-1.977 3.089-1.827 5.036h-9.026zm10.82 4h-14.82v-18h22v7.501c-.623-.261-1.297-.422-2-.476v-5.025h-18v14h11.502c.312.749.765 1.424 1.318 2zm-9.32-11c-.828 0-1.5-.671-1.5-1.5 0-.828.672-1.5 1.5-1.5s1.5.672 1.5 1.5c0 .829-.672 1.5-1.5 1.5z\" />\n    </svg>\n);\n\n/**\n * Heart empty icon component\n *\n * @Img\n * @param props.style Svg style\n */\nexport const HeartEmpty = ({ style }) => (\n    <img\n        src={require(\"./img/heart_empty.svg\")}\n        alt=\"like icon\"\n        style={style}\n        width={size}\n        height={size}\n    />\n);\n\n/**\n * Heart full icon component\n *\n * @Img\n * @param props.style Svg style\n */\nexport const HeartFull = ({ style }) => (\n    <img\n        src={require(\"./img/heart_full.svg\")}\n        alt=\"like icon\"\n        style={style}\n        width={size}\n        height={size}\n    />\n);\n\n/**\n * Comment icon component\n *\n * @Img\n * @param props.style style\n */\nexport const Comment = ({ style }) => (\n    <img\n        src={require(\"./img/comment.svg\")}\n        alt=\"comment icon\"\n        style={style}\n        width={size}\n        height={size}\n    />\n);\n\n/**\n * More icon component\n *\n * @Svg\n * @param props.style Svg style\n */\nexport const More = ({ style }) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={style}\n        width={size}\n        height={size}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 18c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3zm0-9c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3zm0-9c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3z\" />\n    </svg>\n);\n\n/**\n * Upload icon component\n *\n * @Svg\n * @param props.style Svg style\n */\nexport const Upload = ({ style }) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={style}\n        width={size}\n        height={size}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M10 9h-6l8-9 8 9h-6v11h-4v-11zm11 11v2h-18v-2h-2v4h22v-4h-2z\" />\n    </svg>\n);\n\n/**\n * Bell icon component\n *\n * @Svg\n * @param props.style Svg style\n */\nexport const Bell = ({ style }) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={style}\n        width={size}\n        height={size}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M15 21c0 1.598-1.392 3-2.971 3s-3.029-1.402-3.029-3h6zm.137-17.055c-.644-.374-1.042-1.07-1.041-1.82v-.003c.001-1.172-.938-2.122-2.096-2.122s-2.097.95-2.097 2.122v.003c.001.751-.396 1.446-1.041 1.82-4.668 2.709-1.985 11.715-6.862 13.306v1.749h20v-1.749c-4.877-1.591-2.193-10.598-6.863-13.306zm-3.137-2.945c.552 0 1 .449 1 1 0 .552-.448 1-1 1s-1-.448-1-1c0-.551.448-1 1-1zm-6.451 16c1.189-1.667 1.605-3.891 1.964-5.815.447-2.39.869-4.648 2.354-5.509 1.38-.801 2.956-.76 4.267 0 1.485.861 1.907 3.119 2.354 5.509.359 1.924.775 4.148 1.964 5.815h-12.903z\" />\n    </svg>\n);\n\n/**\n * Next icon component\n *\n * @Svg\n * @param props.style Svg style\n */\nexport const Next = ({ style }) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={style}\n        width={size}\n        height={size}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M5 3l3.057-3 11.943 12-11.943 12-3.057-3 9-9z\" />\n    </svg>\n);\n\n/**\n * Add icon component\n *\n * @Svg\n * @param props.style Svg style\n */\nexport const Add = ({ style }) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={style}\n        width={size}\n        height={size}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M7.127 22.564l-7.126 1.436 1.438-7.125 5.688 5.689zm-4.274-7.104l5.688 5.689 15.46-15.46-5.689-5.689-15.459 15.46z\" />\n    </svg>\n);\n\n/**\n * AddPost icon component\n *\n * @Svg\n * @param props.style Svg style\n */\nexport const AddPost = ({ style }) => (\n    <svg\n        style={style}\n        width={size}\n        height={size}\n        viewBox=\"0 0 24 24\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        focusable=\"false\"\n    >\n        <g>\n            <path d=\"M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4zM14 13h-3v3H9v-3H6v-2h3V8h2v3h3v2z\"></path>\n        </g>\n    </svg>\n);\n\n/**\n * Profile icon component\n *\n * @Svg\n * @param props.style Svg style\n */\nexport const Profile = ({ style }) => (\n    <svg viewBox=\"0 0 15 18.9\" width={size} height={size} style={style}>\n        <path d=\"M7.5 8.8c2.6 0 4.7-2 4.7-4.4S10.1 0 7.5 0 2.8 2 2.8 4.4C2.9 6.8 5 8.8 7.5 8.8zm0 1.5c-4.2 0-7.5 3.2-7.5 7.4 0 .6.5 1.2 1.2 1.2h12.6c.7 0 1.2-.5 1.2-1.2 0-4.1-3.3-7.4-7.5-7.4z\"></path>\n    </svg>\n);\n\n/**\n * Search icon component\n *\n * @Svg\n * @param props.style Svg style\n */\nexport const Search = ({ style }) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={size}\n        height={size}\n        style={style}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M23.809 21.646l-6.205-6.205c1.167-1.605 1.857-3.579 1.857-5.711 0-5.365-4.365-9.73-9.731-9.73-5.365 0-9.73 4.365-9.73 9.73 0 5.366 4.365 9.73 9.73 9.73 2.034 0 3.923-.627 5.487-1.698l6.238 6.238 2.354-2.354zm-20.955-11.916c0-3.792 3.085-6.877 6.877-6.877s6.877 3.085 6.877 6.877-3.085 6.877-6.877 6.877c-3.793 0-6.877-3.085-6.877-6.877z\" />\n    </svg>\n);\n\n/**\n * MinimizeSearch icon component\n *\n * @Svg\n * @param props.style Svg style\n */\nexport const MinimizeSearch = ({ style }) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={size}\n        height={size}\n        style={style}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M13 10h-8v-2h8v2zm8.172 14l-7.387-7.387c-1.388.874-3.024 1.387-4.785 1.387-4.971 0-9-4.029-9-9s4.029-9 9-9 9 4.029 9 9c0 1.761-.514 3.398-1.387 4.785l7.387 7.387-2.828 2.828zm-12.172-8c3.859 0 7-3.14 7-7s-3.141-7-7-7-7 3.14-7 7 3.141 7 7 7z\" />\n    </svg>\n);\n\n/**\n * Filter icon component\n *\n * @Svg\n * @param props.style Svg style\n */\nexport const Filter = ({ style }) => (\n    <svg\n        viewBox=\"0 0 24 24\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        focusable=\"false\"\n        width={size}\n        height={size}\n        style={style}\n    >\n        <g>\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n            <path d=\"M3 17v2h6v-2H3zM3 5v2h10V5H3zm10 16v-2h8v-2h-8v-2h-2v6h2zM7 9v2H3v2h4v2h2V9H7zm14 4v-2H11v2h10zm-6-4h2V7h4V5h-4V3h-2v6z\"></path>\n        </g>\n    </svg>\n);\n\n/**\n * Collapse icon component\n *\n * @Svg\n * @param props.style Svg style\n */\nexport const Collapse = ({ style }) => (\n    <svg\n        width={size}\n        height={size}\n        style={style}\n        version=\"1.1\"\n        viewBox=\"0 0 20 20\"\n        x=\"0px\"\n        y=\"0px\"\n    >\n        <g>\n            <path d=\"M16 16V4h2v12h-2zM6 9l2.501-2.5-1.5-1.5-5 5 5 5 1.5-1.5-2.5-2.5h8V9H6z\"></path>\n        </g>\n    </svg>\n);\n\n/**\n * View icon component\n *\n * @Img\n * @param props.style style\n */\nexport const View = ({ style }) => (\n    <img\n        src={require(\"./img/eye.svg\")}\n        alt=\"view icon\"\n        style={style}\n        width={size}\n        height={size}\n    />\n);\n\n/**\n * Trash icon component\n *\n * @Img\n * @param props.style style\n */\nexport const Trash = ({ style }) => (\n    <img\n        src={require(\"./img/trash.svg\")}\n        alt=\"trash icon\"\n        style={style}\n        width={size}\n        height={size}\n    />\n);\n\n/**\n * Modify icon component\n *\n * @Img\n * @param props.style style\n */\nexport const Modify = ({ style }) => (\n    <img\n        src={require(\"./img/modify.svg\")}\n        alt=\"modify icon\"\n        style={style}\n        width={size}\n        height={size}\n    />\n);\n\n/**\n * Notice icon component\n *\n * @Img\n * @param props.style style\n */\nexport const Notice = ({ style }) => (\n    <img\n        src={require(\"./img/speaker.svg\")}\n        alt=\"notice icon\"\n        style={style}\n        width={size}\n        height={size}\n    />\n);\n\n/**\n * Logout icon component\n *\n * @Img\n * @param props.style style\n */\nexport const Logout = ({ style }) => (\n    <img\n        src={require(\"./img/logout.svg\")}\n        alt=\"logout icon\"\n        style={style}\n        width={size}\n        height={size}\n    />\n);\n","import React from \"react\";\nimport { Query } from \"@apollo/react-components\";\nimport Loader from \"./Loader\";\n\n/**\n * * 공통 요청 쿼리 컴포넌트\n *\n * @Component\n * @author firsk\n */\nconst CommonQuery = ({ children, ...props }) => {\n    return (\n        <Query {...props}>\n            {({ loading, error, data, fetchMore, client }) => {\n                if (error) return `Error!: ${error}`;\n                if (!data) {\n                    return <Loader />;\n                }\n                return children({\n                    data,\n                    loading,\n                    fetchMore,\n                    client\n                });\n            }}\n        </Query>\n    );\n};\n\nexport default CommonQuery;\n","module.exports = __webpack_public_path__ + \"static/media/modify.50e0186d.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport Input from \"./Input\";\n\nconst Box = styled.div`\n    ${(props) => props.theme.whiteBox}\n    border-radius: 0;\n    width: 100%;\n    max-width: 350px;\n`;\n\nexport const FormWrapper = styled(Box)`\n    padding: 1rem;\n    margin-bottom: 15px;\n    width: 500px;\n    background: rgba(0, 0, 0, 0.03);\n\n    ${(props) => props.theme.media.phone} {\n        width: 300px;\n    }\n`;\n\nexport const InputWrapper = styled.div`\n    position: relative;\n    margin-bottom: 10px;\n`;\n\nexport const Label = styled.label`\n    position: absolute;\n    top: 2px;\n    left: 5px;\n    font-size: 10px;\n    opacity: ${(props) => (props.val ? 0.5 : 0)};\n    animation: opacity 2s slidein;\n    z-index: 100;\n`;\n\nexport const StateChanger = styled.div`\n    text-align: center;\n    padding: 20px 0px;\n`;\n\nexport const TextArea = styled.textarea`\n    ${(props) => props.theme.whiteBox};\n    width: 100%;\n    height: ${(props) => props.height}px;\n    resize: none;\n    font-size: 12px;\n    overflow: auto;\n    background: ${(props) => props.theme.bgColor};\n    padding: 15px;\n    &:focus {\n        outline: none;\n    }\n`;\n\nexport const Select = styled.select`\n    ${(props) => props.theme.whiteBox};\n    display: block;\n    width: 100%;\n    height: 35px;\n    font-size: 14px;\n    &:focus {\n        outline: none;\n    }\n`;\n\nexport const FormInput = ({ label, children, ...props }) => (\n    <InputWrapper>\n        <Label htmlFor={props.name} val={props.value}>\n            {label}\n        </Label>\n        <Input {...props} />\n        {children}\n    </InputWrapper>\n);\n\nexport const FormTextArea = ({ label, children, ...props }) => (\n    <InputWrapper>\n        <Label htmlFor={props.name} val={props.value}>\n            {label}\n        </Label>\n        <TextArea {...props} />\n        {children}\n    </InputWrapper>\n);\n","module.exports = __webpack_public_path__ + \"static/media/logout.f9cbf4e6.svg\";","import React, { useCallback, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@apollo/client\";\nimport loadable from \"@loadable/component\";\nimport Header from \"./components/Header\";\nimport Nav from \"./components/Nav\";\nimport AuthModal from \"./components/modal/Auth\";\nimport SetNoticeModal from \"./components/modal/SetNoticeContainer\";\nimport { useDispatch, useSelector } from \"./context\";\nimport { CONTRACT_NAVIGATION, SET_ME, SET_IS_MOBILE } from \"./context/action\";\nimport { ME } from \"./graphql/query/user\";\nimport { COLLAPSE_KEY, setStorage } from \"./lib/state\";\n\nconst Feed = loadable(() => import(\"./pages/feed\"));\nconst SearchPostPage = loadable(() => import(\"./pages/search/SearchPostPage\"));\nconst SearchCategoryPage = loadable(() =>\n    import(\"./pages/search/SearchCategoryPage\")\n);\nconst Post = loadable(() => import(\"./pages/post\"));\nconst CreatePostPage = loadable(() => import(\"./pages/post/CreatePostPage\"));\nconst UpdatePostPage = loadable(() => import(\"./pages/post/UpdatePostPage\"));\nconst User = loadable(() => import(\"./pages/user\"));\nconst NoMatch = loadable(() => import(\"./pages/404\"));\n\nconst Container = styled.div`\n    display: flex;\n    position: absolute;\n    flex-direction: column;\n    flex-wrap: nowrap;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    overflow: hidden;\n`;\n\nconst Section = styled.section`\n    display: flex;\n    flex-wrap: nowrap;\n    position: relative;\n    height: 100%;\n    overflow: hidden;\n`;\n\nconst Main = styled.main`\n    z-index: 0;\n    position: relative;\n    flex-grow: 1;\n    flex-direction: column;\n    display: flex;\n    height: 100%;\n    width: 100%;\n    padding: 2rem;\n    overflow: auto;\n\n    ${(props) => props.theme.media.desktop} {\n        margin-left: 0;\n    }\n\n    ${(props) => props.theme.media.phone} {\n        padding: 1rem;\n    }\n`;\n\nconst App = () => {\n    /**\n     * 로컬 상태 변경 모듈 활성화\n     */\n    const dispatch = useDispatch();\n    /**\n     * 로컬 상태 감시 모듈 활성화\n     */\n    const {\n        isShowLoginModal,\n        isShowNoticeModal,\n        isCollapseNav\n    } = useSelector();\n    /**\n     * 사용자 정보 로드\n     */\n    useQuery(ME, {\n        ssr: false,\n        onCompleted: ({ me }) => {\n            if (me) {\n                const { id, nickname, email, avatar, isMaster } = me;\n                dispatch({\n                    type: SET_ME,\n                    id,\n                    nickname,\n                    email,\n                    avatar,\n                    isMaster\n                });\n            }\n        }\n    });\n    /**\n     * 리사이징 핸들러\n     */\n    const handleResize = useCallback(\n        (e) => {\n            const { innerWidth } = e.target;\n            /**\n             * 네비게이션이 축소된 경우\n             */\n            if (isCollapseNav === \"contract\") {\n                return;\n            }\n\n            if (innerWidth <= 922) {\n                /**\n                 * 네비게이션 축소\n                 */\n                dispatch({\n                    type: CONTRACT_NAVIGATION\n                });\n                setStorage(COLLAPSE_KEY, \"contract\");\n            }\n            /**\n             * 모바일 여부 설정\n             */\n            if (innerWidth <= 576) {\n                dispatch({\n                    type: SET_IS_MOBILE,\n                    payload: true\n                });\n            } else {\n                dispatch({\n                    type: SET_IS_MOBILE,\n                    payload: false\n                });\n            }\n        },\n        [isCollapseNav]\n    );\n    /**\n     * 라이프 사이클 모듈 활성화\n     */\n    useEffect(() => {\n        /**\n         * 리사이징 이벤트 바인딩\n         */\n        window.addEventListener(\"resize\", handleResize);\n\n        const { innerWidth } = window;\n        /**\n         * 모바일 여부 설정\n         */\n        if (innerWidth <= 576) {\n            dispatch({\n                type: SET_IS_MOBILE,\n                payload: true\n            });\n        }\n        /**\n         * 리사이징 이벤트 언바인딩\n         */\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n\n    return (\n        <Container>\n            <Header />\n            <Section>\n                <Nav />\n                <Main collapse={isCollapseNav} id=\"main\">\n                    <Switch>\n                        <Route exact path=\"/\" component={Feed} />\n                        <Route\n                            exact\n                            path=\"/create_post\"\n                            component={CreatePostPage}\n                        />\n                        <Route\n                            exact\n                            path=\"/update_post/:id\"\n                            component={UpdatePostPage}\n                        />\n                        <Route exact path=\"/post/:id\" component={Post} />\n                        <Route exact path=\"/user/:id\" component={User} />\n                        <Route\n                            exact\n                            path=\"/search/:query\"\n                            component={SearchPostPage}\n                        />\n                        <Route\n                            exact\n                            path=\"/category/:content\"\n                            component={SearchCategoryPage}\n                        />\n                        <Route component={NoMatch} />\n                    </Switch>\n                </Main>\n                {isShowLoginModal && <AuthModal />}\n                {isShowNoticeModal && <SetNoticeModal />}\n            </Section>\n        </Container>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Spinner from \"react-loader-spinner\";\n\nexport const Container = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 10000;\n`;\n\n/**\n * 공통 로더 컴포넌트\n *\n * @Component\n * @author frisk\n */\nconst Loader = () => (\n    <Container>\n        <Spinner\n            type=\"ThreeDots\"\n            color=\"#4142DD\"\n            height={80}\n            width={80}\n            visible={true}\n        />\n    </Container>\n);\n\nexport default Loader;\n","/**\n * * 로컬 상태 관리 모듈\n *\n * @author frisk;\n * @param state {*} 상태\n * @param action {*} 액션\n */\nexport default function reducer(state, action) {\n    switch (action.type) {\n        case \"SET_ME\":\n            return {\n                ...state,\n                id: action.id,\n                nickname: action.nickname,\n                email: action.email,\n                avatar: action.avatar,\n                isMaster: action.isMaster\n            };\n        case \"SHOW_NOTICE_MODAL\":\n            return {\n                ...state,\n                isShowNoticeModal: true,\n                activeNotice: {\n                    id: action.id,\n                    action: action.action,\n                    actionText: action.actionText,\n                    title: action.title,\n                    description: action.description\n                }\n            };\n        case \"HIDE_NOTICE_MODAL\":\n            return {\n                ...state,\n                isShowNoticeModal: false,\n                activeNotice: {\n                    id: \"\",\n                    action: \"wait\",\n                    actionText: \"비활성화\",\n                    title: \"\",\n                    description: \"\"\n                }\n            };\n\n        case \"SHOW_SEARCH_BAR\":\n            return {\n                ...state,\n                isShowSearchBar: true\n            };\n        case \"HIDE_SEARCH_BAR\":\n            return {\n                ...state,\n                isShowSearchBar: false\n            };\n        case \"SHOW_FILTER_BAR\":\n            return {\n                ...state,\n                isShowFilterBar: true\n            };\n        case \"HIDE_FILTER_BAR\":\n            return {\n                ...state,\n                isShowFilterBar: false\n            };\n        case \"SHOW_LOGIN_MODAL\":\n            return {\n                ...state,\n                isShowLoginModal: true\n            };\n        case \"HIDE_LOGIN_MODAL\":\n            return {\n                ...state,\n                isShowLoginModal: false\n            };\n        case \"SEARCH_POST\":\n            return {\n                ...state,\n                searchPostOption: {\n                    orderBy:\n                        \"orderBy\" in action\n                            ? action.orderBy\n                            : state.searchPostOption.orderBy,\n                    query:\n                        \"query\" in action\n                            ? action.query\n                            : state.searchPostOption.query,\n                    filter:\n                        \"filter\" in action\n                            ? action.filter\n                            : state.searchPostOption.filter\n                }\n            };\n        case \"EXPAND_NAVIGATION\":\n            return {\n                ...state,\n                isCollapseNav: \"expand\"\n            };\n        case \"CONTRACT_NAVIGATION\":\n            return {\n                ...state,\n                isCollapseNav: \"contract\"\n            };\n        case \"SET_IS_MOBILE\":\n            return {\n                ...state,\n                isMobile: action.payload\n            };\n        default:\n            return { ...state };\n    }\n}\n","import React, { useReducer, useContext, createContext } from \"react\";\nimport reducer from \"./reducer\";\n\nconst Context = createContext(null);\n\nconst DispatchContext = createContext(null);\n\n/**\n * * 로컬 상태\n *\n * @author frisk\n * @property id                 - 사용자 ID\n * @property nickname           - 사용자 별칭\n * @property email              - 사용자 이메일\n * @property avatar             - 사용자 프로필 사진\n * @property isMaster           - 운영자 여부\n * @property isShowNoticeModal  - 공지사항 팝업 보이기 여부\n * @property isShowAddPostModal - 게시물 추가 팝업 보이기 여부\n * @property isShowSearchBar    - 검색바 보이기 여부\n * @property isShowFilterBar    - 검색 필터 보이기 여부\n * @property isShowLoginModal   - 로그인 팝업 보이기 여부\n * @property activePost         - 선택한 게시물 정보\n * @property activeNotice       - 선택한 공지사항 정보\n * @property searchPostOption   - 검색 옵션\n * @property isCollapseNav      - 네비게이션 확장상태 (expand, contract)\n * @property isMobile          - 모바일 환경 여부\n */\nconst initialState = {\n    id: null,\n    nickname: null,\n    email: null,\n    avatar: null,\n    isMaster: false,\n    isShowNoticeModal: false,\n    isShowAddPostModal: false,\n    isShowSearchBar: false,\n    isShowFilterBar: false,\n    isShowLoginModal: false,\n    isCollapseNav: \"expand\",\n    isMobile: false,\n    activePost: {\n        id: \"\",\n        title: \"\",\n        description: \"\"\n    },\n    activeNotice: {\n        id: \"\",\n        action: \"wait\",\n        actionText: \"비활성화\",\n        title: \"\",\n        description: \"\"\n    },\n    feedPostOption: {},\n    searchPostOption: {\n        first: 30,\n        orderBy: \"createdAt_DESC\",\n        query: undefined,\n        category: undefined,\n        userId: undefined\n    }\n};\n\n/**\n * * 로컬 상태 제공 컴포넌트\n */\nexport function ContextProvider({ children }) {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    return (\n        <Context.Provider value={state}>\n            <DispatchContext.Provider value={dispatch}>\n                {children}\n            </DispatchContext.Provider>\n        </Context.Provider>\n    );\n}\n\n/**\n * * Hooks - 로컬 상태 감시 모듈\n */\nexport function useSelector() {\n    const state = useContext(Context);\n\n    if (!state) {\n        throw new Error(\"Provider is not defined\");\n    }\n\n    return state;\n}\n\n/**\n * * Hooks - 로컬 상태 변경 모듈\n */\nexport function useDispatch() {\n    const dispatch = useContext(DispatchContext);\n\n    if (!dispatch) {\n        throw new Error(\"Provider is not defined\");\n    }\n\n    return dispatch;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled(Link)`\n    display: block;\n    height: 100%;\n    width: 100%;\n    border: 0;\n    border-radius: ${(props) => props.theme.borderRadius};\n    color: white;\n    font-weight: 600;\n    background: ${(props) => props.theme.blueColor};\n    text-align: center;\n    padding: 7px;\n    font-size: 14px;\n    border: 1px solid ${(props) => props.theme.blueColor};\n    text-decoration: none !important;\n    position: relative;\n\n    &:hover {\n        opacity: 0.8;\n        color: white;\n    }\n`;\n\n/**\n * * 공통 버튼 링크 컴포넌트\n *\n * @Component\n * @author frisk\n * @param props.to 이동할 url\n */\nconst BtnLink = ({ to, children }) => (\n    <Container to={to} role=\"button\">\n        {children}\n    </Container>\n);\nexport default BtnLink;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled(Link)`\n    display: block;\n    width: ${(props) => props.size}px;\n    height: ${(props) => props.size}px;\n    border: ${(props) => props.theme.boxBorder};\n    border-radius: 10px;\n    overflow: hidden;\n    cursor: pointer;\n    position: relative;\n\n    & img {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n    }\n`;\n\n/**\n * * 공통 프로필 사진 컴포넌트\n *\n * @Component\n * @author frisk\n * @param props.userId  사용자 ID\n * @param props.size    프로필 사진 크기\n * @param props.src     이미지 자원\n */\nconst Avatar = ({ userId, size, src }) => (\n    <Container size={size} role=\"button\" to={`/user/${userId}`}>\n        <img src={src} alt=\"avatar\" />\n    </Container>\n);\n\nexport default Avatar;\n","import Cookies from \"js-cookie\";\n\n/**\n * 토큰 키\n * @type {string}\n */\nexport const TOKEN_KEY = \"token__frisklog\";\n/**\n * 네비게이션 확장 여부 키\n * @type {boolean}\n */\nexport const COLLAPSE_KEY = \"collapse__frisklog\";\n\n/**\n * * Cookie getter\n *\n * @param {string} key cookie key\n */\nexport const getStorage = (key) => {\n    /**\n     * 결과 값\n     * @type {string|null}\n     */\n    let content = null;\n\n    if (process.browser && Cookies.get(key)) {\n        content = JSON.parse(Cookies.get(key));\n    }\n\n    return content;\n};\n\n/**\n * * Cookie setter\n *\n * @param {string} key cookie key\n */\nexport const setStorage = (key, value) => {\n    /**\n     * 변경 여부\n     * @type {boolean}\n     */\n    let isSet = false;\n\n    if (process.browser) {\n        Cookies.set(key, JSON.stringify(value), { expires: 365 });\n        isSet = true;\n    }\n\n    return isSet;\n};\n\n/**\n * * Cookie delete\n *\n * @param {string} key cookie key\n */\nexport const deleteStorage = (key) => {\n    /**\n     * 변경 여부\n     * @type {boolean}\n     */\n    let isDelete = false;\n\n    if (process.browser) {\n        Cookies.remove(key);\n        isDelete = true;\n    }\n\n    return isDelete;\n};\n","module.exports = __webpack_public_path__ + \"static/media/speaker.ba8cfb3e.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FormInput } from \"../Form\";\nimport Button from \"../Button\";\nimport Loader from \"../Loader\";\nimport { Thumbnail } from \"../../assets/icon\";\n\nconst UploadWrapper = styled.div`\n    ${(props) => props.theme.whiteBox}\n    width: 100%;\n    height: 150px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 10px;\n    cursor: pointer;\n\n    & img {\n        width: 100%;\n        height: 100%;\n    }\n`;\n\n/**\n * * 회원가입 프레젠터 컴포넌트\n *\n * @Presenter\n * @author frisk\n * @param props.uploadLoading 업로드 요청 진행 여부\n * @param props.signUpLoading 회원가입 요청 진행 여부\n * @param props.nickname 별칭 입력을 위한 Hooks\n * @param props.email 이메일 입력을 위한 Hooks\n * @param props.preview 이미지 미리보기\n * @param props.$file file element\n * @param props.onChangeFile 파일 변경 핸들러\n * @param props.onClickFile 파일 클릭 핸들러\n * @param props.onSubmit 회원가입 요청 핸들러\n */\nconst SignUpPresenter = ({\n    uploadLoading,\n    signUpLoading,\n    nickname,\n    email,\n    preview,\n    $file,\n    onChangeFile,\n    onClickFile,\n    onSubmit\n}) => {\n    return (\n        <>\n            {(uploadLoading || signUpLoading) && <Loader />}\n            <form onSubmit={onSubmit}>\n                <UploadWrapper onClick={onClickFile} role=\"button\" tabIndex=\"0\">\n                    {preview ? (\n                        <img\n                            src={preview}\n                            alt=\"avatar\"\n                            title=\"변경하려면 클릭하세요.\"\n                        />\n                    ) : (\n                        <Thumbnail style={{ width: 100, height: 50 }} />\n                    )}\n\n                    <input\n                        type=\"file\"\n                        onChange={onChangeFile}\n                        ref={$file}\n                        hidden\n                        accept=\"image/jpg, image/jpeg, image/png, .gif\"\n                    />\n                </UploadWrapper>\n                <FormInput\n                    type=\"email\"\n                    placeholder=\"이메일을 입력하세요.\"\n                    name=\"email\"\n                    autoComplete=\"off\"\n                    required\n                    {...email}\n                    label=\"이메일\"\n                />\n                <FormInput\n                    placeholder=\"닉네임을 입력하세요\"\n                    required\n                    name=\"nickname\"\n                    {...nickname}\n                    autoComplete=\"off\"\n                    label=\"닉네임\"\n                />\n                <Button type=\"submit\">회원가입</Button>\n            </form>\n        </>\n    );\n};\n\nexport default SignUpPresenter;\n","module.exports = __webpack_public_path__ + \"static/media/trash.0d10f8f1.svg\";","import { gql } from \"@apollo/client\";\n\n/**\n * * 사용자 검색\n *\n * @query\n * @author frisk\n * @param $skip 건너뛸 목록의 수\n * @param $first 요청 목록의 수\n * @param $orderBy 정렬\n * @param $query 검색어\n */\nexport const GET_USERS = gql`\n    query GetUsers($skip: Int, $first: Int, $orderBy: String) {\n        users(skip: $skip, first: $first, orderBy: $orderBy) {\n            id\n            nickname\n            isMaster\n            createdAt\n            updatedAt\n            postCount\n            avatar {\n                url\n            }\n        }\n    }\n`;\n\n/**\n * * 사용자 상세 조회\n *\n * @query\n * @author frisk\n * @param $id 사용자 ID\n */\nexport const GET_USER = gql`\n    query GetUser($id: String!) {\n        user(id: $id) {\n            id\n            nickname\n            isMaster\n            createdAt\n            updatedAt\n            postCount\n            avatar {\n                url\n            }\n        }\n    }\n`;\n\n/**\n * * 내 정보\n *\n * @query\n * @author frisk\n */\nexport const ME = gql`\n    query Me {\n        me {\n            id\n            nickname\n            email\n            avatar {\n                url\n            }\n            isMaster\n        }\n    }\n`;\n","import {\n    ApolloClient,\n    InMemoryCache,\n    createHttpLink,\n    ApolloLink\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { onError } from \"@apollo/client/link/error\";\nimport fetch from \"isomorphic-unfetch\";\nimport { TOKEN_KEY, getStorage } from \"./state\";\n\n/**\n * 아폴로 클라이언트 객체\n * @type {object|null}\n */\nlet apolloClient = null;\n\n/**\n * 노드 환경에 fetch 추가\n */\nif (!process.browser) {\n    global.fetch = fetch;\n}\n\n/**\n * 아폴로 클라이언트 객체 생성 함수\n * @author frisk\n */\nfunction createApolloClient() {\n    /**\n     * http 연결을 통해 GraphQL 요청 및 응답 처리 활성화\n     */\n    const httpLink = createHttpLink({\n        uri: process.env.RAZZLE_BACKEND_API_PATH\n    });\n\n    /**\n     * 서버 오류, 네트워크 오류 및 GraphQL 오류 포착 및 처리\n     */\n    const errorLink = onError(({ graphQLErrors, networkError }) => {\n        if (graphQLErrors) {\n            graphQLErrors.map(({ message, path }) => {\n                console.log(`[GraphQL error] Query: ${path}, ${message}`);\n            });\n        }\n        if (networkError) {\n            console.log(`[Network error]: ${networkError}`);\n        }\n    });\n\n    /**\n     * 요청 컨텍스트를 설정\n     */\n    const authLink = setContext((_, { headers }) => {\n        const token = getStorage(TOKEN_KEY);\n        return {\n            headers: {\n                ...headers,\n                Authorization: `Bearer ${token}`\n            }\n        };\n    });\n\n    return new ApolloClient({\n        connectToDevTools: process.browser,\n        ssrMode: !process.browser,\n        link: ApolloLink.from([errorLink, authLink, httpLink]),\n        cache: process.browser\n            ? new InMemoryCache().restore(window.__APOLLO_STATE__)\n            : new InMemoryCache()\n    });\n}\n\nexport function initializeApollo(initialState = null) {\n    const _apolloClient = apolloClient || createApolloClient();\n\n    // If your page has Next.js data fetching methods that use Apollo Client, the initial state\n    // gets hydrated here\n    if (initialState) {\n        // Get existing cache, loaded during client side data fetching\n        const existingCache = _apolloClient.extract();\n        // Restore the cache using the data passed from getStaticProps/getServerSideProps\n        // combined with the existing cached data\n        _apolloClient.cache.restore({ ...existingCache, ...initialState });\n    }\n    // For SSG and SSR always create a new Apollo Client\n    if (!process.browser) return _apolloClient;\n    // Create the Apollo Client once in the client\n    if (!apolloClient) apolloClient = _apolloClient;\n\n    return _apolloClient;\n}\n","import React from \"react\";\nimport { FormInput } from \"../Form\";\nimport Button from \"../Button\";\nimport Loader from \"../Loader\";\n\n/**\n * * 로그인 프레젠터 컴포넌트\n *\n * @Presenter\n * @author frisk\n * @param props.loading 로그인 요청 진행 여부\n * @param props.email 이메일 입력을 위한 Hooks\n * @param props.onSubmit 로그인 요청 핸들러\n */\nconst SignInPresenter = ({ loading, email, onSubmit }) => (\n    <>\n        {loading && <Loader />}\n        <form onSubmit={onSubmit}>\n            <FormInput\n                type=\"email\"\n                placeholder=\"이메일을 입력하세요.\"\n                name=\"email\"\n                autoComplete=\"off\"\n                required\n                label=\"이메일\"\n                {...email}\n            />\n            <Button type=\"submit\">로그인</Button>\n        </form>\n    </>\n);\n\nexport default SignInPresenter;\n","import React, { useCallback, FormEvent, FC } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { useInput } from \"../../hooks\";\nimport { SIGN_IN } from \"../../graphql/mutation/user\";\nimport SignInPresenter from \"./SignInPresenter\";\nimport { TOKEN_KEY, setStorage } from \"../../lib/state\";\nimport { useDispatch } from \"../../context\";\nimport { SET_ME, HIDE_LOGIN_MODAL } from \"../../context/action\";\n\n/**\n * * 로그인 컨테이너 컴포넌트\n *\n * @Container\n * @author frisk\n */\nconst SignInContainer = () => {\n    /**\n     * 로컬 상태 변경 모듈 활성화\n     */\n    const dispatch = useDispatch();\n    /**\n     * 로그인 mutation 활성화\n     */\n    const [login, { loading }] = useMutation(SIGN_IN);\n    /**\n     * 이메일 입력을 위한 useInput 활성화\n     */\n    const email = useInput(\"\");\n    /**\n     * 로그인 요청 핸들러\n     */\n    const handleSubmit = useCallback(\n        async (e) => {\n            e.preventDefault();\n            /**\n             * 요청 중인 경우\n             */\n            if (loading) {\n                return alert(\"요청 중입니다. 잠시만 기다려주세요.\");\n            }\n\n            try {\n                const {\n                    data: { logIn }\n                } = await login({\n                    variables: { email: email.value }\n                });\n                if (logIn) {\n                    const {\n                        token,\n                        id,\n                        nickname,\n                        email,\n                        avatar,\n                        isMaster\n                    } = logIn;\n                    /**\n                     * 토큰 설정\n                     */\n                    setStorage(TOKEN_KEY, token);\n                    /**\n                     * 로컬 상태에 내 정보 저장\n                     */\n                    dispatch({\n                        type: SET_ME,\n                        id,\n                        nickname,\n                        email,\n                        avatar,\n                        isMaster\n                    });\n                    /**\n                     * 로그인 모달 숨기기\n                     */\n                    dispatch({\n                        type: HIDE_LOGIN_MODAL\n                    });\n                }\n            } catch (error) {\n                const { message } = JSON.parse(error.message);\n                alert(message);\n            }\n        },\n        [email.value, loading]\n    );\n\n    return (\n        <SignInPresenter\n            loading={loading}\n            email={email}\n            onSubmit={handleSubmit}\n        />\n    );\n};\n\nexport default SignInContainer;\n","import React, { useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { Modal } from \"react-bootstrap\";\nimport SignIn from \"./SignInContainer\";\nimport SignUp from \"./SignUpContainer\";\nimport { StateChanger } from \"../Form\";\nimport { useDispatch } from \"../../context\";\nimport { HIDE_LOGIN_MODAL } from \"../../context/action\";\n\nconst Link = styled.span`\n    color: ${(props) => props.theme.blueColor};\n    cursor: pointer;\n`;\n\n/**\n * * 인증 팝업 컴포넌트\n *\n * @Component\n * @Modal\n * @author frisk\n */\nconst Auth = () => {\n    /**\n     * 로컬 상태 변경 모듈 활성화\n     */\n    const dispatch = useDispatch();\n    /**\n     * 화면 전환 상태 모듈 활성화\n     */\n    const [action, setAction] = useState(\"login\");\n    /**\n     * 팝업 숨기기 핸들러\n     */\n    const handleClose = useCallback(() => {\n        dispatch({\n            type: HIDE_LOGIN_MODAL\n        });\n    }, []);\n\n    return (\n        <Modal onHide={handleClose} show animation={false}>\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    {action === \"login\" ? \"로그인\" : \"회원가입\"}\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {action === \"signup\" ? (\n                    <SignUp setAction={setAction} />\n                ) : (\n                    <SignIn />\n                )}\n                <StateChanger>\n                    {action === \"login\" && (\n                        <div>\n                            계정이 없다면&nbsp;\n                            <Link onClick={() => setAction(\"signup\")}>\n                                회원가입\n                            </Link>\n                        </div>\n                    )}\n                    {action === \"signup\" && (\n                        <div>\n                            계정이 있다면&nbsp;\n                            <Link onClick={() => setAction(\"login\")}>\n                                로그인\n                            </Link>\n                        </div>\n                    )}\n                </StateChanger>\n            </Modal.Body>\n        </Modal>\n    );\n};\n\nexport default Auth;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.button`\n    display: block;\n    height: 100%;\n    width: 100%;\n    border: 0;\n    border-radius: ${(props) => props.theme.borderRadius};\n    color: white;\n    font-weight: 600;\n    background: ${(props) => props.theme.blueColor};\n    text-align: center;\n    padding: 7px;\n    font-size: 14px;\n    border: 1px solid ${(props) => props.theme.blueColor};\n\n    &:hover {\n        opacity: 0.8;\n    }\n`;\n\n/**\n * * 공통 버튼 컴포넌트\n *\n * @Component\n * @author frisk\n * @param props.onClick 클릭 핸들러\n * @param props.type    버튼 타입\n */\nconst Button = ({ onClick, type = \"button\", children }) => (\n    <Container onClick={onClick} type={type}>\n        {children}\n    </Container>\n);\nexport default Button;\n","/**\n * 내정보 업데이트\n *\n * @action\n * @author frisk\n */\nexport const SET_ME = \"SET_ME\";\n/**\n * 공지사항 팝업 보이기\n *\n * @action\n * @author frisk\n */\nexport const SHOW_NOTICE_MODAL = \"SHOW_NOTICE_MODAL\";\n/**\n * 공지사항 팝업 숨기기\n *\n * @action\n * @author frisk\n */\nexport const HIDE_NOTICE_MODAL = \"HIDE_NOTICE_MODAL\";\n/**\n * 로그인 팝업 보이기\n *\n * @action\n * @author frisk\n */\nexport const SHOW_LOGIN_MODAL = \"SHOW_LOGIN_MODAL\";\n/**\n * 로그인 팝업 숨기기\n *\n * @action\n * @author frisk\n */\nexport const HIDE_LOGIN_MODAL = \"HIDE_LOGIN_MODAL\";\n/**\n * 검색바 보이기\n *\n * @action\n * @author frisk\n */\nexport const SHOW_SEARCH_BAR = \"SHOW_SEARCH_BAR\";\n/**\n * 검색바 숨기기\n *\n * @action\n * @author frisk\n */\nexport const HIDE_SEARCH_BAR = \"HIDE_SEARCH_BAR\";\n/**\n * 검색 필터 보이기\n *\n * @action\n * @author frisk\n */\nexport const SHOW_FILTER_BAR = \"SHOW_FILTER_BAR\";\n/**\n * 검색 필터 숨기기\n *\n * @action\n * @author frisk\n */\nexport const HIDE_FILTER_BAR = \"HIDE_FILTER_BAR\";\n/**\n * 게시물 검색\n *\n * @action\n * @author frisk\n */\nexport const SEARCH_POST = \"SEARCH_POST\";\n/**\n * 네비게이션 확장\n *\n * @action\n * @author friskㅔ\n */\nexport const EXPAND_NAVIGATION = \"EXPAND_NAVIGATION\";\n/**\n * 네비게이션 수축\n *\n * @action\n * @author frisk\n */\nexport const CONTRACT_NAVIGATION = \"CONTRACT_NAVIGATION\";\n/**\n * 모바일 환경 여부 설정\n *\n * @action\n * @author frisk\n */\nexport const SET_IS_MOBILE = \"SET_IS_MOBILE\";\n","import React, { useState, useCallback, useRef } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { useInput, useLazyAxios } from \"../../hooks\";\nimport SignUpPresenter from \"./SignUpPresenter\";\nimport { SIGN_UP } from \"../../graphql/mutation/user\";\n\n/**\n * * 회원가입 컨테이너 컴포넌트\n *\n * @Container\n * @author frisk\n * @param props.setAction 인증 화면 전환 모드 (로그인, 회원가입)\n */\nconst SignUpContainer = ({ setAction }) => {\n    /**\n     * 업로드 요청을 위한 Axios 활성화\n     */\n    const { loading: uploadLoading, call } = useLazyAxios();\n    /**\n     * file element\n     */\n    const $file = useRef(null);\n    /**\n     * 별칭 입력을 위한 useInput 활성화\n     */\n    const nickname = useInput(\"\");\n    /**\n     * 이메일 입력을 위한 useInput 활성화\n     */\n    const email = useInput(\"\");\n    /**\n     * 미리보기 상태 관리 모듈 활성화\n     */\n    const [preview, setPreview] = useState(\"\");\n    /**\n     * 파일 상태 모듈 활성화\n     */\n    const [file, setFile] = useState(\"\");\n    /**\n     * 회원가입 mutation 활성화\n     */\n    const [signUp, { loading: signUpLoading }] = useMutation(SIGN_UP);\n    /**\n     * 파일 변경 핸들러\n     */\n    const handleChangeFile = useCallback(\n        async (e) => {\n            const { value, files } = e.target;\n            /**\n             * 취소 버튼을 누른 경우\n             */\n            if (!value) {\n                return;\n            }\n            /**\n             * 업로드 요청 중인 경우\n             */\n            if (uploadLoading) {\n                return;\n            }\n\n            const [file] = files;\n\n            const formData = new FormData();\n            formData.append(\"file\", file);\n\n            const { data, error } = await call({\n                method: \"post\",\n                url: `${process.env.BACKEND_API_PATH}/api/upload`,\n                data: formData,\n                headers: { \"content-type\": \"multipart/form-data\" }\n            });\n\n            if (data) {\n                const reader = new FileReader();\n\n                reader.onloadend = () => {\n                    /**\n                     * 인코딩된 미리보기 저장\n                     */\n                    setPreview(reader.result);\n                    /**\n                     * 응답 받은 파일 URL 저장\n                     */\n                    setFile(data);\n                };\n                /**\n                 * base64로 인코딩\n                 */\n                reader.readAsDataURL(file);\n            }\n\n            if (error) {\n                alert(\"썸네일 업로드 중 오류가 발생했습니다.\");\n            }\n        },\n        [uploadLoading]\n    );\n    /**\n     * 파일 클릭 핸들러\n     */\n    const handleClickFile = useCallback(() => {\n        const node = $file.current;\n        if (node) {\n            node.click();\n        }\n    }, []);\n    /**\n     * 회원가입 요청 핸들러\n     */\n    const handleSubmit = useCallback(\n        async (e) => {\n            e.preventDefault();\n            /**\n             * 회원가입 요청 중인 경우\n             */\n            if (signUpLoading) {\n                return alert(\"요청 중입니다. 잠시만 기다려주세요.\");\n            }\n\n            const tf = confirm(\"입력한 내용으로 회원가입 하시겠어요?\");\n\n            if (tf) {\n                try {\n                    const {\n                        data: { createUser }\n                    } = await signUp({\n                        variables: {\n                            email: email.value,\n                            nickname: nickname.value,\n                            file: file || process.env.RAZZLE_DEFAULT_AVATAR\n                        }\n                    });\n                    if (createUser) {\n                        /**\n                         * 로그인 화면 전환\n                         */\n                        setAction(\"login\");\n                        alert(\"회원가입이 정상처리되었습니다.\");\n                    }\n                } catch (error) {\n                    const { message } = JSON.parse(error.message);\n                    alert(message);\n                }\n            }\n        },\n        [email.value, nickname.value, file, signUpLoading]\n    );\n\n    return (\n        <SignUpPresenter\n            uploadLoading={uploadLoading}\n            signUpLoading={signUpLoading}\n            nickname={nickname}\n            email={email}\n            preview={preview}\n            $file={$file}\n            onChangeFile={handleChangeFile}\n            onClickFile={handleClickFile}\n            onSubmit={handleSubmit}\n        />\n    );\n};\n\nexport default SignUpContainer;\n","import React, { forwardRef } from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.input`\n    border: 0;\n    border: ${(props) => props.theme.boxBorder};\n    border-radius: ${(props) => props.theme.borderRadius};\n    background: ${(props) => props.theme.bgColor};\n    width: 100%;\n    height: 35px;\n    padding: 0px 15px;\n    font-size: 12px;\n\n    &:focus {\n        outline: none;\n    }\n`;\n\n/**\n * * 공통 input 컴포넌트\n *\n * @Component\n * @author frisk\n */\nconst Input = forwardRef((props, ref) => <Container ref={ref} {...props} />);\n\nexport default Input;\n","const BOX_BORDER = \"1px solid #e6e6e6\";\nconst BORDER_RADIUS = \"4px\";\n\nconst customMediaQuery = (maxWidth) =>\n    `@media only screen and (max-width: ${maxWidth}px)`;\n\nconst media = {\n    custom: customMediaQuery,\n    desktop: customMediaQuery(922),\n    tablet: customMediaQuery(768),\n    phone: customMediaQuery(576)\n};\n\nexport default {\n    bgColor: \"#FAFAFA\",\n    blackColor: \"#262626\",\n    darkGrayColor: \"#999\",\n    lightGrayColor: \"#c7c7c7\",\n    successColor: \"#3D8939\",\n    infoColor: \"#358597\",\n    redColor: \"#ED4956\",\n    blueColor: \"#4142DD\",\n    darkBlueColor: \"#003569\",\n    boxBorder: BOX_BORDER,\n    borderRadius: BORDER_RADIUS,\n    whiteBox: `\n    border:${BOX_BORDER};\n    border-radius:${BORDER_RADIUS};\n    background: white;\n  `,\n    maxWidth: \"730px\",\n    headerShadow: \"0 1px 2px rgba(0, 0, 0, 0.15), 0 0 2px rgba(0, 0, 0, 0.1)\",\n    headerActiveColor: \"#468999\",\n    media\n};\n","import { createGlobalStyle } from \"styled-components\";\nimport normalize from \"styled-normalize\";\n\nconst GlobalStyle = createGlobalStyle`\n  ${normalize}\n\n  body {\n    background: rgba(0,0,0,0.03) !important;\n  }\n  \n  #root, body, html {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    position: relative;\n    width: 100%;\n  }\n\n  hr {\n    width: 100%;\n  }\n\n  button {\n    border: none;\n    margin: 0;\n    padding: 0;\n    width: auto;\n    overflow: visible;\n    background: transparent;\n  }\n\n  button:focus {\n    outline: 0 !important;\n  }\n\n  .a11y-hidden {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    clip-path: polygon(0 0, 0 0, 0 0);\n  }\n\n  .modal {\n    display: flex !important;\n  }\n\n  .modal-dialog {\n    flex: 1;\n    margin: 0 !important;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    max-width: 100% !important;\n  }\n  \n  .modal-content {\n    max-width: 500px;\n  }\n\n  .te-mode-switch-section {\n    display: none !important;\n  }\n\n  .tui-editor-contents pre {\n    ${(props) => props.theme.whiteBox};\n  }\n\n  .tui-editor-contents img {\n    width: 100%;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport { hydrate } from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { ThemeProvider } from \"styled-components\";\nimport { loadableReady } from \"@loadable/component\";\nimport { ContextProvider } from \"./context\";\nimport App from \"./App\";\nimport theme from \"./theme\";\nimport GlobalStyle from \"./theme/globalStyle\";\nimport { initializeApollo } from \"./lib/apollo\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"github-markdown-css/github-markdown.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"@toast-ui/editor/dist/toastui-editor.css\";\nimport \"@toast-ui/editor/dist/toastui-editor-viewer.css\";\n\nconst apolloClient = initializeApollo();\n\n/**\n * Wait for all loadable components to be loaded before rendering.\n * Beacuse Loadable components loads all our scripts asynchronously.\n */\nloadableReady(() => {\n    hydrate(\n        <ApolloProvider client={apolloClient}>\n            <ThemeProvider theme={theme}>\n                <ContextProvider>\n                    <GlobalStyle />\n                    <BrowserRouter>\n                        <App />\n                    </BrowserRouter>\n                </ContextProvider>\n            </ThemeProvider>\n        </ApolloProvider>,\n        document.getElementById(\"root\")\n    );\n});\n\nif (module.hot) {\n    module.hot.accept();\n}\n","import { useState, useCallback, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport const useInput = (defaultValue, where) => {\n    const [value, setValue] = useState(defaultValue);\n\n    const onChange = useCallback((e) => {\n        if (where === \"no_space\") {\n            setValue(e.target.value.replace(/(^\\s*)|(\\s*$)/g, \"\"));\n        } else {\n            setValue(e.target.value);\n        }\n    }, []);\n\n    return { value, onChange, setValue };\n};\n\nexport const useDebounce = (defaultValue, delay) => {\n    const [value, setValue] = useState(\"\");\n    const [state, setState] = useState(defaultValue);\n\n    useEffect(() => {\n        if (value === state) return;\n        const timeout = setTimeout(() => setValue(state), delay);\n\n        return () => clearTimeout(timeout);\n    }, [value, state]);\n\n    return [value, setState];\n};\n\nexport const useLazyAxios = () => {\n    const [loading, setLoading] = useState(false);\n\n    const call = useCallback(\n        async (options) => {\n            const result = {};\n            setLoading(true);\n            try {\n                const { data } = await axios(options);\n                result[\"data\"] = data;\n            } catch (error) {\n                result[\"error\"] = error;\n            }\n            setLoading(false);\n            return result;\n        },\n        [loading]\n    );\n\n    return { loading, call };\n};\n","module.exports = __webpack_public_path__ + \"static/media/heart_empty.70ebbcd1.svg\";","import { gql } from \"@apollo/client\";\n\n/**\n * * 공지사항 추가\n *\n * @mutation\n * @author frisk\n * @param $title 제목\n * @param $description 내용\n */\nexport const CREATE_NOTICE = gql`\n    mutation createNotice($title: String!, $description: String!) {\n        createNotice(title: $title, description: $description)\n    }\n`;\n\n/**\n * * 공지사항 수정\n *\n * @mutation\n * @author frisk\n * @param $id 공지사항 ID\n * @param $title 제목\n * @param $description 내용\n */\nexport const UPDATE_NOTICE = gql`\n    mutation updateNotice(\n        $id: String!\n        $title: String!\n        $description: String!\n    ) {\n        updateNotice(id: $id, title: $title, description: $description)\n    }\n`;\n\n/**\n * * 공지사항 삭제\n *\n * @mutation\n * @author frisk\n * @param $id 공지사항 ID\n */\nexport const DELETE_NOTICE = gql`\n    mutation deleteNotice($id: String!) {\n        deleteNotice(id: $id)\n    }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { FormInput, FormTextArea } from \"../Form\";\nimport Loader from \"../Loader\";\n\nconst ReadOnlyDescription = styled.div`\n    ${(props) => props.theme.whiteBox};\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 300px;\n    overflow: auto;\n    background: white;\n    padding: 15px;\n`;\n\nconst PreviewWrap = styled(ReadOnlyDescription)`\n    z-index: 10;\n\n    & > span {\n        position: absolute;\n        top: 5px;\n        right: 5px;\n        cursor: pointer;\n    }\n`;\n\n/**\n * 공지사항 팝업 프레젠터 컴포넌트\n *\n * @Presenter\n * @author frisk\n * @param props.setNoticeLoading 등록 및 수정 요청 중 여부\n * @param props.removeNoticeLoading 삭제 요청 중 여부\n * @param props.action 팝업 모드\n * @param props.isMaster 운영자 여부\n * @param props.title 제목 입력을 위한 Hooks\n * @param props.description 내용 입력을 위한 Hooks\n * @param props.mdDescription 마크다운 내용\n * @param props.preview 미리보기\n * @param props.onShowEdit 수정 모드 전환 핸들러\n * @param props.onPreview 미리보기 핸들러\n * @param props.onClosePreview 미리보기 숨기기 핸들러\n * @param props.onClose 팝업 숨기기 핸들러\n * @param props.onDelete 삭제 요청 핸들러\n * @param props.onSubmit 등록 및 수정 요청 핸들러\n */\nconst SetNoticePresenter = ({\n    setNoticeLoading,\n    removeNoticeLoading,\n    action,\n    isMaster,\n    title,\n    description,\n    mdDescription,\n    preview,\n    onShowEdit,\n    onPreview,\n    onClosePreview,\n    onClose,\n    onDelete,\n    onSubmit\n}) => (\n    <Modal onHide={onClose} show animation={false}>\n        {(setNoticeLoading || removeNoticeLoading) && <Loader />}\n        <Modal.Header closeButton>\n            <Modal.Title>\n                {action.code === \"readonly\" || action.code === \"modifiable\"\n                    ? title.value\n                    : `공지사항 ${action.modalTitle}`}\n            </Modal.Title>\n        </Modal.Header>\n        <form onSubmit={onSubmit}>\n            <Modal.Body>\n                {(action.code === \"add\" || action.code === \"modify\") && (\n                    <FormInput\n                        placeholder=\"제목을 입력하세요.\"\n                        name=\"title\"\n                        required\n                        autoComplete=\"off\"\n                        {...title}\n                        label=\"제목\"\n                    />\n                )}\n                <FormTextArea\n                    placeholder=\"내용을 입력하세요.\"\n                    name=\"description\"\n                    required\n                    autoComplete=\"off\"\n                    height={300}\n                    {...description}\n                    label=\"내용\"\n                >\n                    {(action.code === \"readonly\" ||\n                        action.code === \"modifiable\") && (\n                        <ReadOnlyDescription\n                            dangerouslySetInnerHTML={{ __html: mdDescription }}\n                            className=\"markdown-body\"\n                        ></ReadOnlyDescription>\n                    )}\n                    {preview && (\n                        <PreviewWrap>\n                            <div\n                                dangerouslySetInnerHTML={{ __html: preview }}\n                                className=\"markdown-body\"\n                            ></div>\n                            <span aria-hidden=\"true\" onClick={onClosePreview}>\n                                ×\n                            </span>\n                        </PreviewWrap>\n                    )}\n                </FormTextArea>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={onClose}>\n                    취소\n                </Button>\n                {(action.code === \"readonly\" ||\n                    action.code === \"modifiable\") && (\n                    <>\n                        {isMaster && (\n                            <Button variant=\"danger\" onClick={onDelete}>\n                                삭제\n                            </Button>\n                        )}\n                        <Button\n                            variant=\"primary\"\n                            onClick={isMaster ? onShowEdit : onClose}\n                        >\n                            {isMaster ? \"수정\" : \"확인\"}\n                        </Button>\n                    </>\n                )}\n                {(action.code === \"modify\" || action.code === \"add\") && (\n                    <>\n                        <Button\n                            variant=\"info\"\n                            onClick={preview ? onClosePreview : onPreview}\n                        >\n                            {preview ? \"미리보기 취소\" : \"미리보기\"}\n                        </Button>\n                        <Button variant=\"primary\" type=\"submit\">\n                            {action.code === \"add\" ? \"등록\" : \"수정\"}\n                        </Button>\n                    </>\n                )}\n            </Modal.Footer>\n        </form>\n    </Modal>\n);\n\nexport default SetNoticePresenter;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport marked from \"marked\";\nimport {\n    CREATE_NOTICE,\n    UPDATE_NOTICE,\n    DELETE_NOTICE\n} from \"../../graphql/mutation/notice\";\nimport SetNoticePresenter from \"./SetNoticePresenter\";\nimport { useInput } from \"../../hooks\";\nimport { useSelector, useDispatch } from \"../../context\";\nimport { HIDE_NOTICE_MODAL } from \"../../context/action\";\n\n/**\n * 공지사항 팝업 컨테이너 컴포넌트\n *\n * @Container\n * @Modal\n * @author frisk\n */\nconst SetNoticeContainer = () => {\n    /**\n     * 로컬 상태 변경 모듈 활성화\n     */\n    const dispatch = useDispatch();\n    /**\n     * 로컬 상태 감시 모듈 활성화\n     */\n    const { activeNotice, isMaster } = useSelector();\n    /**\n     * 제목 입력을 위한 useInput 활성화\n     */\n    const modalTitle = useInput(activeNotice.title);\n    /**\n     * 내용 입력을 위한 useInput 활성화\n     */\n    const modalDescription = useInput(activeNotice.description);\n    /**\n     * 내용(마크다운) 상태 관리 모듈 활성화\n     */\n    const [mdDescription, setMdDescription] = useState(\"\");\n    /**\n     * 미리보기 상태 관리 모듈 활성화\n     */\n    const [preview, setPreview] = useState(\"\");\n    /**\n     * 팝업 상태 관리 모듈 활성화\n     */\n    const [modalAction, setModalAction] = useState({\n        code: activeNotice.action,\n        modalTitle: activeNotice.actionText\n    }); // readonly, modifiable, modify, add\n    /**\n     * 공지사항 추가 및 수정 mutation 활성화\n     */\n    const [set, { loading: setNoticeLoading }] = useMutation(\n        activeNotice.id ? UPDATE_NOTICE : CREATE_NOTICE\n    );\n    /**\n     * 공지사항 삭제 mutation 활성화\n     */\n    const [remove, { loading: removeNoticeLoading }] = useMutation(\n        DELETE_NOTICE\n    );\n    /**\n     * 미리보기 핸들러\n     */\n    const handlePreView = useCallback(async () => {\n        /**\n         * 내용을 입력하지 않은 경우\n         */\n        if (!modalDescription.value) {\n            return alert(\"내용을 입력하세요.\");\n        }\n        /**\n         * 내용을 마크다운 형식으로 바꾸고 상태 변경\n         */\n        setPreview(marked(modalDescription.value));\n    }, [modalDescription.value]);\n    /**\n     * 미리보기 종료 핸들러\n     */\n    const handleClosePreview = useCallback(() => {\n        setPreview(\"\");\n    }, []);\n    /**\n     * 공지사항 팝업 숨기기 핸들러\n     */\n    const handleClose = useCallback(() => {\n        /**\n         * 공지사항 팝업 숨기기\n         */\n        dispatch({\n            type: HIDE_NOTICE_MODAL\n        });\n    }, []);\n    /**\n     * 공지사항 수정 모드 전환 핸들러\n     */\n    const handleShowEdit = useCallback(() => {\n        setModalAction({\n            code: \"modify\",\n            modalTitle: \"수정\"\n        });\n    }, []);\n    /**\n     * 공지사항 삭제 핸들러\n     */\n    const handleDelete = useCallback(async () => {\n        /**\n         * 삭제 요청 중인 경우\n         */\n        if (removeNoticeLoading) {\n            return alert(\"요청 중입니다. 잠시만 기다려주세요.\");\n        }\n\n        const tf = confirm(\"공지사항을 삭제하시겠어요?\");\n\n        if (tf) {\n            const {\n                data: { deleteNotice }\n            } = await remove({\n                variables: {\n                    noticeId: activeNotice.id\n                }\n            });\n            if (deleteNotice) {\n                alert(\"공지사항이 삭제되었습니다.\");\n                location.reload();\n            }\n        }\n    }, [removeNoticeLoading]);\n    /**\n     * 공지사항 등록 및 수정 핸들러\n     */\n    const handleSubmit = useCallback(\n        async (e) => {\n            e.preventDefault();\n            /**\n             * 요청 중인 경우\n             */\n            if (setNoticeLoading) {\n                return alert(\"요청 중입니다. 잠시만 기다려주세요.\");\n            }\n\n            const tf = confirm(\n                `입력한 내용으로 ${\n                    modalAction.code === \"add\" ? \"등록\" : \"수정\"\n                }하시겠어요?`\n            );\n\n            if (tf) {\n                try {\n                    const {\n                        data: { addNotice, updateNotice }\n                    } = await set({\n                        variables: {\n                            title: modalTitle.value,\n                            description: modalDescription.value,\n                            noticeId: activeNotice.id\n                        }\n                    });\n                    if (updateNotice) {\n                        alert(\"공지사항이 수정되었습니다.\");\n                        location.reload();\n                    } else if (addNotice) {\n                        alert(\"공지사항이 등록되었습니다.\");\n                        location.reload();\n                    }\n                } catch (error) {\n                    const { message } = JSON.parse(error.message);\n                    alert(message);\n                }\n            }\n        },\n        [\n            modalAction.code,\n            modalTitle.value,\n            modalDescription.value,\n            setNoticeLoading\n        ]\n    );\n    /**\n     * 라이프 사이클 모듈 활성화\n     */\n    useEffect(() => {\n        /**\n         * 내용 마크다운 형식으로 변환\n         */\n        if (activeNotice.description) {\n            setMdDescription(marked(activeNotice.description));\n        }\n    }, [activeNotice.description]);\n\n    return (\n        <SetNoticePresenter\n            removeNoticeLoading={removeNoticeLoading}\n            setNoticeLoading={setNoticeLoading}\n            action={modalAction}\n            isMaster={isMaster}\n            title={modalTitle}\n            description={modalDescription}\n            mdDescription={mdDescription}\n            preview={preview}\n            onShowEdit={handleShowEdit}\n            onPreview={handlePreView}\n            onClosePreview={handleClosePreview}\n            onClose={handleClose}\n            onDelete={handleDelete}\n            onSubmit={handleSubmit}\n        />\n    );\n};\n\nexport default SetNoticeContainer;\n","module.exports = __webpack_public_path__ + \"static/media/eye.043f9099.svg\";","module.exports = __webpack_public_path__ + \"static/media/comment.a93a5733.svg\";","import { gql } from \"@apollo/client\";\n\n/**\n * * 로그인\n *\n * @mutation\n * @author frisk\n * @param $email 이메일\n */\nexport const SIGN_IN = gql`\n    mutation signIn($email: String!) {\n        logIn(email: $email) {\n            token\n            id\n            nickname\n            email\n            avatar {\n                url\n            }\n            isMaster\n        }\n    }\n`;\n\n/**\n * * 회원가입\n *\n * @mutation\n * @author frisk\n * @param $email 이메일\n * @param $nickname 별칭\n * @param $file 프로필 사진\n */\nexport const SIGN_UP = gql`\n    mutation signUp($email: String!, $nickname: String!, $file: String!) {\n        createUser(email: $email, nickname: $nickname, file: $file)\n    }\n`;\n","module.exports = __webpack_public_path__ + \"static/media/heart_full.a8cd76c1.svg\";"],"sourceRoot":""}